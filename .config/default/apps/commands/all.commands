#!/bin/bash

teste () {
    echo "teste normal"
}

function install_ubuntu_restricted_extras() {
    echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections
    addApt "ubuntu-restricted-extras"
}

function pos_install_flameshotscreenshot() {
    sudo -u $currentUser bash -c "echo -e '[Desktop Entry]\nVersion=1.1\nType=Application\nName=Flameshot Screenshot\nComment=Screenshot.\nIcon=flameshot\nExec=flameshot gui\nActions=\nCategories=Graphics;' | tee '$currentHomeDir/.local/share/applications/flameshot-screenshot.desktop'" \
        && sudo -u $currentUser chmod +x "$currentHomeDir/.local/share/applications/flameshot-screenshot.desktop"

    sudo -u $currentUser bash -c "gsettings set org.gnome.settings-daemon.plugins.media-keys screenshot '[]' \
        && gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings \"['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']\" \
        && gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name 'flameshot' \
        && gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command '/usr/bin/flameshot gui' \
        && gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding 'Print'"

}

function install_gmail_app() {
    sudo -u $currentUser mkdir -p "$currentHomeDir/tmp/gmail-app-linux" \
        && sudo -u $currentUser git clone https://github.com/thiagotognoli/gmail-app-linux.git "$currentHomeDir/tmp/gmail-app-linux" \
        && sudo -u $currentUser bash "$currentHomeDir/tmp/gmail-app-linux/install-zip.sh"
    sudo -u $currentUser rm -rf "$currentHomeDir/tmp/gmail-app-linux"
    addPreFinishCommand "sudo rm -rf \"$currentHomeDir/tmp\""
}

function install_linux_dynamic_wallpapers() {
    sudo -u $currentUser mkdir -p "$currentHomeDir/tmp/linux_dynamic_wallpapers" \
        && sudo -u $currentUser git clone https://github.com/thiagotognoli/Linux_Dynamic_Wallpapers.git "$currentHomeDir/tmp/linux_dynamic_wallpapers" \
        && sudo -u $currentUser bash "(cd $currentHomeDir/tmp/linux_dynamic_wallpapers && $currentHomeDir/tmp/linux_dynamic_wallpapers/install.sh || cd $currentHomeDir)"
    sudo -u $currentUser rm -rf "$currentHomeDir/tmp/linux_dynamic_wallpapers"
    addPreFinishCommand "sudo rm -rf \"$currentHomeDir/tmp\""
}

function install_timeshift_autosnap_apt() {
    sudo -u $currentUser mkdir -p "$currentHomeDir/tmp/timeshift-autosnap-apt" \
        && sudo -u $currentUser git clone https://github.com/wmutschl/timeshift-autosnap-apt.git "$currentHomeDir/tmp/timeshift-autosnap-apt" \
        && sudo -u $currentUser cd "$currentHomeDir/tmp/timeshift-autosnap-apt" \
        && sudo make install
    sudo -u $currentUser rm -rf "$currentHomeDir/tmp/timeshift-autosnap-apt"
    addPreFinishCommand "sudo rm -rf \"$currentHomeDir/tmp\""
}

function install_syncthing_apt() {
    addApt "curl apt-transport-https"
    addPosAptCommand "pre_install_syncthing_apt"
    addAptSecond "syncthing"
}

function pre_install_syncthing_apt() {
    cd /tmp
    sudo curl -s -o /usr/share/keyrings/syncthing-archive-keyring.gpg https://syncthing.net/release-key.gpg
    echo "deb [signed-by=/usr/share/keyrings/syncthing-archive-keyring.gpg] https://apt.syncthing.net/ syncthing stable" | sudo tee /etc/apt/sources.list.d/syncthing.list
    sudo apt update
}

function install_googlechrome() {
    #zenity --question --width=600 --height=400 --text "Instalar Google Chrome?" || return 0
    mkdir -p /tmp/googlechrome \
        && wget -O /tmp/googlechrome/googlechrome.deb $googleChromeDownloadLastUrl \
        && sudo dpkg -i /tmp/googlechrome/googlechrome.deb
    rm -rf /tmp/googlechrome
}

function install_teamviewer() {
    #zenity --question --width=600 --height=400 --text "Instalar TeamViewer?" || return 0
    sudo mkdir -p /tmp/teamviewerdwl \
        && sudo wget -O /tmp/teamviewerdwl/teamviwer.deb $teamViewerDownloadLastUrl \
        && sudo dpkg -i /tmp/teamviewerdwl/teamviwer.deb
    sudo apt -y -f install
    sudo rm -rf /tmp/teamviewerdwl
}

function pos_install_ohmyzsh() {

    sudo chsh -s $(which zsh) $currentUser

    sudo -u $currentUser mkdir -p "$currentHomeDir/tmp/zsh" \
        && sudo -u $currentUser wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O "$currentHomeDir/tmp/zsh/install.sh" \
	    && sudo -u $currentUser sh -c "RUNZSH='no'; sh '$currentHomeDir/tmp/zsh/install.sh' --unattended" \
        && sudo -u $currentUser rm -rf "$currentHomeDir/.zshrc" \
        && sudo -u $currentUser cp "$currentHomeDir/.oh-my-zsh/templates/zshrc.zsh-template" "$currentHomeDir/.zshrc" \
        && sudo -u $currentUser sed -ri 's/(ZSH_THEME=")([^"]*)(")/\1agnoster\3/g' "$currentHomeDir/.zshrc" \
        && sudo -u $currentUser git clone https://github.com/abertsch/Menlo-for-Powerline.git "$currentHomeDir/tmp/zsh/Menlo-for-Powerline" \
        && sudo mv "$currentHomeDir/tmp/zsh/Menlo-for-Powerline/"*.ttf /usr/share/fonts/.  \
        && cd /tmp \
        && sudo fc-cache -vf /usr/share/fonts
        ##sudo -u $currentUser chsh -s /bin/zsh root \

        #&& sudo -u $currentUser sed -ri 's/(plugins=\()([^\)]*)(\))/\1git git-extras git-flow gitignore ubuntu cp extract sudo systemd last-working-dir docker docker-compose web-search vscode laravel laravel5 npm yarn zsh-syntax-highlighting\3/g' "$currentHomeDir/.zshrc" \

    declare -A plugins;
    local IFS=" "; 
    
    currentPlugins="$(sudo -u $currentUser grep -E "^plugins=(.*)" "$currentHomeDir/.zshrc" | sed -r "s/^(plugins\=\()([^\)]*)(\))/\2/")"
    for plugin in $currentPlugins; do
        plugins["$plugin"]="$plugin";
    done

    plugins["git"]="git"
    plugins["git-extras"]="git-extras"
    plugins["git-flow"]="git-flow"
    plugins["gitignore"]="gitignore"
    plugins["ubuntu"]="ubuntu"
    plugins["cp"]="cp"
    plugins["extract"]="extract"
    plugins["sudo"]="sudo"
    plugins["systemd"]="systemd"
    plugins["last-working-dir"]="last-working-dir"
    plugins["docker"]="docker"
    plugins["docker-compose"]="docker-compose"
    plugins["web-search"]="web-search"
    plugins["vscode"]="vscode"
    #plugins["laravel"]="laravel"
    #plugins["laravel5"]="laravel5"
    plugins["npm"]="npm"
    plugins["yarn"]="yarn"


    addPreFinishCommand "sudo rm -rf \"$currentHomeDir/tmp\""

    sudo -u $currentUser git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-"$currentHomeDir/.oh-my-zsh/custom"}/plugins/zsh-syntax-highlighting \
        && plugins["zsh-syntax-highlighting"]="zsh-syntax-highlighting"

    sudo -u $currentUser git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-"$currentHomeDir/.oh-my-zsh/custom"}/themes/powerlevel10k \
        && sudo -u $currentUser sed -ri 's/(ZSH_THEME=")([^"]*)(")/\1powerlevel10k\/powerlevel10k\3/g' "$currentHomeDir/.zshrc"


    plugins="${plugins[@]}"
    sed -ri "s/^(plugins\=\()([^\)]*)(\))/\1$plugins\3/g" "$currentHomeDir/.zshrc"

    #sudo wget -N -P /usr/share/fonts/. \
    #    https://github.com/romkatv/dotfiles-public/raw/master/.local/share/fonts/NerdFonts/MesloLGS%20NF%20Regular.ttf \
    #    https://github.com/romkatv/dotfiles-public/raw/master/.local/share/fonts/NerdFonts/MesloLGS%20NF%20Bold.ttf \
    #    https://github.com/romkatv/dotfiles-public/raw/master/.local/share/fonts/NerdFonts/MesloLGS%20NF%20Italic.ttf \
    #    https://github.com/romkatv/dotfiles-public/raw/master/.local/share/fonts/NerdFonts/MesloLGS%20NF%20Bold%20Italic.ttf


    #sudo wget -N -P /usr/share/fonts/. \
    #    https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Regular/complete/Fura%20Code%20Regular%20Nerd%20Font%20Complete%20Mono.otf \
    #    https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Bold/complete/Fura%20Code%20Bold%20Nerd%20Font%20Complete%20Mono.otf \
    #    https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Light/complete/Fura%20Code%20Light%20Nerd%20Font%20Complete%20Mono.otf \
    #    https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Medium/complete/Fura%20Code%20Medium%20Nerd%20Font%20Complete%20Mono.otf

    #sudo wget -N -P /usr/share/fonts/. \
    #    https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Regular/complete/Fira%20Code%20Regular%20Nerd%20Font%20Complete%20Mono.ttf \
    #    https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Bold/complete/Fira%20Code%20Bold%20Nerd%20Font%20Complete%20Mono.ttf \
    #    https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Light/complete/Fira%20Code%20Light%20Nerd%20Font%20Complete%20Mono.ttf \
    #    https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Medium/complete/Fira%20Code%20Medium%20Nerd%20Font%20Complete%20Mono.ttf
        
    sudo cp -R $basePath/devfonts /usr/share/fonts/. 

    while read profile; do
        if [[ "$profile" != "list" && "$profile" != "default" ]]; then
            dconf write "/org/gnome/terminal/legacy/profiles:/${profile}font" "'FiraCode Nerd Font Mono Regular 12'"
            dconf write "/org/gnome/terminal/legacy/profiles:/${profile}use-system-font" "false"

        fi;
    done <<< $(dconf list /org/gnome/terminal/legacy/profiles:/)

    sudo fc-cache -vf /usr/share/fonts
}


function pos_install_lsd() {
    sudo -u $currentUser mkdir -p "$currentHomeDir/tmp/lsd" \
        && sudo -u $currentUser wget https://github.com/Peltoche/lsd/releases/download/0.16.0/lsd_0.16.0_amd64.deb -O "$currentHomeDir/tmp/lsd/lsd.deb" \
        && sudo dpkg -i "$currentHomeDir/tmp/lsd/lsd.deb"
    addPreFinishCommand "sudo rm -rf \"$currentHomeDir/tmp\""
}

